name: CI-GB
on:
  push:
    branches:
      - master
  pull_request:

env:
  TZ: "Asia/Taipei"

jobs:
  gb:
    strategy:
      matrix:
        go-version: [ '1.22' ]
    name: code-test
    runs-on: ubuntu-latest
    services:
      # Redis backend server.
      redis:
        image: loads/redis:7.0
        options: >-
          --health-cmd      "redis-cli ping"
          --health-interval 10s
          --health-timeout  5s
          --health-retries  5
        ports:
          # Maps tcp port 6379 on service container to the host
          - 6379:6379

      # MySQL backend server.
      mysql:
        image: loads/mysql:5.7
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 12345678
        ports:
          - 3306:3306

      # PostgreSQL backend server.
      # docker run -d --name postgres -p 5432:5432 \
      # -e POSTGRES_PASSWORD=12345678 -e POSTGRES_USER=postgres -e POSTGRES_DB=test \
      # -v postgres:/Users/john/Temp/postgresql/data loads/postgres:13
      postgres:
        image: loads/postgres:13
        env:
          POSTGRES_PASSWORD: 12345678
          POSTGRES_USER: postgres
          POSTGRES_DB: test
          TZ: Asia/Shanghai
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # MSSQL backend server.
      # docker run -d --name mssql -p 1433:1433 \
      # -e ACCEPT_EULA=Y \
      # -e SA_PASSWORD=LoremIpsum86 \
      # -e MSSQL_DB=test \
      # -e MSSQL_USER=root \
      # -e MSSQL_PASSWORD=LoremIpsum86 \
      # loads/mssqldocker:14.0.3391.2
      mssql:
        image: loads/mssqldocker:14.0.3391.2
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: LoremIpsum86
          MSSQL_DB: test
          MSSQL_USER: root
          MSSQL_PASSWORD: LoremIpsum86
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P LoremIpsum86 -l 30 -Q \"SELECT 1\" || exit 1"
          --health-start-period 10s
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Setup Timezone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Taipei"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Redis Cluster Containers
        run:  docker-compose -f ".github/workflows/redis/docker-compose.yml" up -d --build

      - name: Setup Golang ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Build & Test
        if: ${{ (github.event_name == 'push' && github.ref != 'refs/heads/master') || github.event_name == 'pull_request' }}
        run: bash .github/workflows/ci-gb.sh

      - name: Build & Test & Coverage
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: bash .github/workflows/ci-main.sh coverage

      - name: Stop Redis Cluster Containers
        run: docker-compose -f ".github/workflows/redis/docker-compose.yml" down

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          slug: go-ghostbb/gb
          flags: go-${{ matrix.go-version }}
